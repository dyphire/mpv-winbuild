name: MPV_OWN

on: 
  schedule:
    - cron: '0 8 * * */4'
  workflow_dispatch:
    inputs:
      clean:
        description: 'input anything if you want to clean build files'
        required: false
      cache_id:
        description: 'input cache_id if you want to renew cache'
        required: false
      release:
        description: "input 'false' if you don't want to release"
        required: false
        default: "true"

jobs:
  build_mpv:
    name: Build MPV
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bit: [64]

    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      - name: 'Get mpv latest commit sha'
        id: get_sha
        uses: mego22/actions-git-sha@main
        with:
          repo: "https://github.com/mpv-player/mpv.git"
      - name: Get current time
        run: |
          echo "short_time=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: mpv-winbuild-cmake/build${{ matrix.bit }}
          key: ${{ runner.os }}-mpv-build${{ matrix.bit }}-${{ env.short_time }}-${{ steps.get_sha.outputs.sha }}-${{ github.event.inputs.cache_id }}
          restore-keys: |
            ${{ runner.os }}-mpv-build${{ matrix.bit }}-${{ env.short_time }}-${{ steps.get_sha.outputs.sha }}
            ${{ runner.os }}-mpv-build${{ matrix.bit }}-${{ env.short_time }}
            ${{ runner.os }}-mpv-build${{ matrix.bit }}
      - name: Build
        id: build
        shell: bash
        run: |
          sudo bash build_own.sh "${{ matrix.bit }}" "${{ github.event.inputs.clean }}"
      - name: Collect error logs
        if: ${{ always() && steps.build.outcome == 'failure' }}
        run: |
          sudo 7z a logs.7z mpv-winbuild-cmake/build${{ matrix.bit }}/*-err.log -r
      - name: upload error logs
        uses: actions/upload-artifact@master
        if: ${{ always() && steps.build.outcome == 'failure' }}
        with:
          name: logs
          path: logs.7z
      - name: Upload artifact
        id: upload
        uses: kittaakos/upload-artifact-as-is@master
        with:
          path: mpv-winbuild-cmake/release/*.7z

  publish_release:
    name: Publish release
    needs: build_mpv
    if: ${{ github.event.inputs.release != 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
    
      - name: 'Get mpv latest commit sha'
        id: get_sha
        uses: mego22/actions-git-sha@main
        with:
          repo: "https://github.com/mpv-player/mpv.git"
      - name: Get current time
        run: |
          echo "long_time=$(date "+%Y-%m-%d %H:%M")" >> $GITHUB_ENV
          echo "short_time=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*/*.7z"
          commit: main
          name: "MPV_OWN ${{ env.long_time }}"
          body: "**MPV git commit**: https://github.com/mpv-player/mpv/commit/${{ steps.get_sha.outputs.sha }}\n**Test**: Build with libass from [dyphire/libass_dev](https://github.com/dyphire/libass/tree/dev), it may fix some problems for scaled with PlayResX\n**Remember**: This is not perfect\n**Build Time**: ${{ env.long_time }}"
          tag: "mpv_own-${{ env.short_time }}"
          allowUpdates: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prune old releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          bash prunetags.sh
